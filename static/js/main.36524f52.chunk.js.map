{"version":3,"sources":["components/Tips/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Tips","result","currency","title","ten","toFixed","fiftheen","twenty","className","style","textAlign","marginTop","role","aria-label","App","props","handleChange","event","exchange","state","target","name","value","setState","handleLanguageChange","preventDefault","clickedLanguage","language","languageDrawer","handleLanguageDrawer","drawer","console","log","handleCurrencyChange","isLoading","fetch","then","respond","json","catch","error","fetchError","data","rates","date","base","selected","currencies","i18n","available","baseline","us","es","fr","update","EUR","this","drowerStatus","languageAvailable","href","onClick","map","lang","index","id","marginBottom","type","onChange","disabled","fontSize","textTransform","fontWeight","color","loading","screen","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36524f52.chunk.js","sourcesContent":["import React from 'react';\n\nimport './tips.scss';\n\nconst Tips = ({ result, currency, title }) => {\n  const ten = (result * 0.10).toFixed(2);\n  const fiftheen = (result * 0.15).toFixed(2);\n  const twenty = (result * 0.2).toFixed(2);\n  return (\n    <section className=\"tips\">\n      <h2 style={{ textAlign: \"center\", marginTop: \"2em\" }}>{title}</h2>\n      <div className=\"tips-boxes\">\n        <div className=\"tips-boxes-10\">\n          <span className=\"emo\" role=\"img\" aria-label=\"Neutral face\">😐</span>\n          {ten} {currency}\n        </div>\n        <div className=\"tips-boxes-15\">\n          <span className=\"emo\" role=\"img\" aria-label=\"Slightly smiling face\">🙂</span>\n          {fiftheen} {currency}\n        </div>\n        <div className=\"tips-boxes-20\">\n          <span className=\"emo\" role=\"img\" aria-label=\"Grinning face\">😃</span>\n          {twenty} {currency}\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Tips;\n","import React from 'react';\n\nimport './App.scss';\n\nimport Tips from '../Tips';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      fetchError: false,\n      rates: null,\n      currencies: {\n        base: 'USD',\n        selected: 'EUR',\n      },\n      exchange: {\n        base: 1,\n        selected: null,\n      },\n      language: 'us',\n      languageDrawer: 'close',\n      i18n: {\n        available: ['us', 'es', 'fr'],\n        baseline: {\n          us: 'Get instant exchange rate',\n          es: 'Tipo de cambio instantáneo',\n          fr: 'Taux de change instantané',\n        },\n        title: {\n          us: 'Tips calculator',\n          es: 'Calculadora de propinas',\n          fr: 'Calcul de pourboires',\n        },\n        update: {\n          us: 'Exchange rates updated',\n          es: 'Actualizaciones de tasas de cambio',\n          fr: 'Mis à jour du taux de change',\n        } \n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.exchangeratesapi.io/latest?base=USD')\n    .then((respond) => respond.json())\n    .catch((error) => {\n      console.error(error);\n      this.setState({\n        fetchError: true,\n      })\n    })\n    .then((data) => {\n      this.setState({\n        isLoading: false,\n        rates: data,\n        date: data.date,\n        exchange: {\n          base: 1,\n          selected: data.rates.EUR,\n        }\n      })\n    });\n  }\n\n  // handle controled fields\n  handleChange = event => {\n    const { exchange } = { ...this.state };\n    const { name, value } = event.target;\n    exchange[name] = value;\n    this.setState({ exchange });\n  }\n\n  handleLanguageChange = event => {\n    event.preventDefault();\n    const clickedLanguage = event.target.name;\n    this.setState({\n      language: clickedLanguage,\n      languageDrawer: 'close',\n    })\n  }\n\n  handleLanguageDrawer = event => {\n    event.preventDefault();\n    const drawer = this.state.languageDrawer;\n    console.log(drawer);\n    if(drawer === 'close') {\n      this.setState({\n        languageDrawer: 'open',\n      })\n    } else {\n      this.setState({\n        languageDrawer: 'close',\n      })\n    }\n  }\n\n  handleCurrencyChange = event => {\n    // get the event target value\n    const { name, value } = event.target;\n\n    if(name === \"base\") {\n      // 1. user see that the app is fetching new rates data\n      this.setState({ isLoading: true })\n      // 2. fetching the data based on the new currency base\n      fetch(`https://api.exchangeratesapi.io/latest?base=${value}`)\n      .then((respond) => respond.json())\n      .catch((error) => {\n        console.error(error);\n        this.setState({\n          fetchError: true,\n        })\n      })\n      .then((data) => {\n        this.setState({\n          isLoading: false,\n          rates: data,\n          date: data.date,\n          exchange: {\n            base: 1,\n            selected: data.rates[value],\n          },\n          currencies: {\n            base: value,\n            selected: value,\n          }\n        })\n      });\n    } else {\n      // get the current state\n      const { currencies } = { ...this.state };\n      const { exchange } = { ...this.state };\n      // change the state copy\n      currencies[name] = value;\n      exchange['selected'] = this.state.rates.rates[value];\n      // push to the state the changes\n      this.setState({ currencies, exchange });\n    }\n  }\n\n  screen() {\n    const { base, selected } = this.state.exchange;\n    const date = this.state.date;\n    const { i18n } = this.state;\n    const { language } = this.state;\n    const drowerStatus = this.state.languageDrawer;\n    const languageAvailable = this.state.i18n.available;\n    //const { base, selected } = this.state.currencies;\n    return (\n      <div className=\"app-container\">\n        <header className=\"app-header\">\n          <ul className={`language-selector ${drowerStatus}`}>\n            <li><a href=\"#default\" className={'language-selector-default'} name={'default'} onClick={this.handleLanguageDrawer}>{language}</a></li>\n            {languageAvailable.map((lang, index) => (\n              <li><a id={index} className={'language-selector-'+lang} href={`#lang=${lang}`} name={lang} onClick={this.handleLanguageChange}>{lang}</a></li>\n            ))}\n          </ul>\n          <h1 style={{ marginTop: \"1.4rem\", textAlign: \"center\", marginBottom: '.4em' }}>Exchange rates</h1>\n          <h2 className=\"baseline\">{i18n.baseline[language]}</h2>\n        </header>\n        <section>\n        <div className=\"app-exchange\">\n            <div className=\"input from\">\n              <input className=\"input-item\" type=\"number\" name=\"base\" value={base} onChange={this.handleChange}/>\n              <select\n                name=\"base\"\n                onChange={this.handleCurrencyChange}\n                value={this.state.currencies.base}\n              >\n                <option value=\"AUD\">AUD</option>\n                <option value=\"CAD\">CAD</option>\n                <option value=\"USD\">USD</option>\n                <option value=\"EUR\">EUR</option>\n              </select>\n            </div>\n            <div className=\"input to\">\n              <input disabled className=\"input-item\" type=\"number\" name=\"selected\" value={(base*selected).toFixed(2)}/>\n              <select\n                name=\"selected\"\n                onChange={this.handleCurrencyChange}\n                value={this.state.currencies.selected}\n              >\n                <option value=\"AUD\">AUD</option>\n                <option value=\"CAD\">CAD</option>\n                <option value=\"USD\">USD</option>\n                <option value=\"EUR\">EUR</option>\n              </select>\n            </div>\n          </div>\n        </section>\n        <Tips result={base} currency={this.state.currencies.base} title={i18n.title[language]} />\n      <footer style={{\n        fontSize: '1em',\n        textAlign: 'center',\n        marginTop: '1.6em',\n        textTransform: 'uppercase',\n        fontWeight: 'bold',\n        color: '#222525'\n      }}>{i18n.update[language]}: {date}</footer>\n      </div>\n    )\n  }\n\n  loading() {\n    return (\n      <div className=\"app-load\">\n        Fetching rates datas\n      </div>\n    )\n  }\n\n  error() {\n    return (\n      <div className=\"app-error\">\n        <h1>FETCH ERROR</h1>\n        <p>Take a look at the console.log error...</p>\n      </div>\n    )\n  }\n\n  render () {\n    const { isLoading } = this.state;\n    const { fetchError } = this.state;\n    return (\n      <div className=\"app\">\n        { fetchError && this.error() }\n        { isLoading && this.loading() }\n        { isLoading || this.screen() }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}